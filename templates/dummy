@app.route('/admin-view-OT', methods=['GET'])
def view_all_ot():
    return render_template('admin-view-all-ot.html')

@app.route('/get_overtime_all', methods=['GET'])
def get_overtime_all():
    # Retrieve filters from the request
    search_query = request.args.get('search_query', '').strip()
    range_type = request.args.get('range', 'week')
    start_date = request.args.get('start_date', '')
    end_date = request.args.get('end_date', '')

    # Determine date range
    now = datetime.now()
    if range_type == 'week':
        start_date = now - timedelta(days=now.weekday())
        end_date = now
    elif range_type == 'month':
        start_date = now.replace(day=1)
        end_date = now
    elif range_type == 'custom' and start_date and end_date:
        start_date = datetime.strptime(start_date, '%Y-%m-%d')
        end_date = datetime.strptime(end_date, '%Y-%m-%d')
    else:
        return jsonify({"error": "Invalid date range"}), 400

    # Create a base query for the overtime collection
    overtime_query = {"date": {"$gte": start_date.strftime('%Y-%m-%d'), "$lte": end_date.strftime('%Y-%m-%d')}}

    # Handle search query if provided
    if search_query:
        matching_users = list(db.users.find({
            "$or": [
                {"name": {"$regex": search_query, "$options": "i"}},
                {"faculty_id": search_query}
            ]
        }))
        user_emails = [user["email"] for user in matching_users]
        if user_emails:
            overtime_query["email"] = {"$in": user_emails}
        else:
            return jsonify([])  # No matches found

    # Aggregate overtime data
    pipeline = [
        {"$match": overtime_query},
        {
            "$group": {
                "_id": "$email",
                "total_hours": {"$sum": "$hours_worked"},
            }
        },
        {"$sort": {"total_hours": -1}}  # Sort by total hours in descending order
    ]

    overtime_data = list(overtime_collection.aggregate(pipeline))

    # Get all faculty information regardless of whether they have overtime
    all_faculty = list(db.users.find({}, {"_id": 0, "name": 1, "email": 1, "faculty_id": 1}))
    
    # Create a dictionary of faculty overtime by email
    overtime_by_email = {data["_id"]: data["total_hours"] for data in overtime_data}
    
    # Prepare the result with all faculty and their corresponding overtime
    result = []
    for faculty in all_faculty:
        result.append({
            "faculty_name": faculty["name"],
            "faculty_id": faculty["faculty_id"],
            "email": faculty["email"],
            "total_hours": overtime_by_email.get(faculty["email"], 0)  # Default to 0 if no overtime
        })
    
    # If search was performed, filter result again (redundant but ensures consistency)
    if search_query:
        result = [r for r in result if 
                  search_query.lower() in r["faculty_name"].lower() or 
                  search_query == r["faculty_id"]]
    
    return jsonify(result)


admin-view-all-ot.html : <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin View Overtime</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
<style>
    :root {
    --primary-color: #6A4C9C;
    --secondary-color: #D8B0F7;
    --accent-color: #F1E1FF;
    --text-dark: #2D2D2D;
    --text-light: #F9F5FF;
    --white: #ffffff;
    --border-color: #E0E0E0;
    --shadow: rgba(106, 76, 156, 0.2);
    --table-stripe: #F8F5FF;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Poppins', sans-serif;
    background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
    color: var(--text-dark);
}

.container {
    width: 95%;
    max-width: 1000px;
    padding: 40px;
    border-radius: 20px;
    background-color: var(--white);
    box-shadow: 0 4px 20px var(--shadow);
}

h1 {
    text-align: center;
    font-size: 2.5rem;
    font-weight: 600;
    margin-bottom: 20px;
    color: var(--primary-color);
}

.header-buttons button {
    padding: 10px 20px;
    font-size: 1rem;
    font-weight: 500;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.3s ease;
}

.header-buttons .back-btn {
    background: var(--primary-color);
    color: var(--text-light);
}

.header-buttons .logout-btn {
    background: var(--secondary-color);
    color: var(--primary-color);
}

.header-buttons .back-btn:hover {
    background: #553982;
    box-shadow: 0 4px 12px var(--shadow);
}

.form-label {
    font-weight: 600;
    margin-bottom: 10px;
    color: var(--text-dark);
    display: block;
}

.form-control, .form-select {
    width: 100%;
    padding: 12px;
    border-radius: 6px;
    border: 1px solid var(--border-color);
    font-size: 1rem;
    margin-bottom: 20px;
    background-color: var(--white);
    color: var(--text-dark);
}

.form-select {
    background-color: var(--white);
}

.table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

th, td {
    padding: 12px;
    text-align: left;
    border-bottom: 1px solid var(--border-color);
}

th {
    background-color: var(--primary-color);
    color: var(--text-light);
}

tr:nth-child(even) {
    background: var(--table-stripe);
}

tr:hover {
    background: var(--accent-color);
}

td a {
    color: var(--primary-color);
    text-decoration: none;
}

td a:hover {
    text-decoration: underline;
}

::placeholder {
    color: #999;
    opacity: 1;
}
/* Floating shapes */
        .floating-shape {
            position: absolute;
            opacity: 0.2;
            pointer-events: none;
            z-index: 0;
        }

        .calendar-shape {
            top: 10%;
            right: 10%;
            width: 200px;
            height: 200px;
            animation: float 6s ease-in-out infinite;
        }

        .clock-shape {
            bottom: 10%;
            left: 5%;
            width: 150px;
            height: 150px;
            animation: float 8s ease-in-out infinite;
        }

        @keyframes float {
            0% { transform: translateY(0) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(5deg); }
            100% { transform: translateY(0) rotate(0deg); }
        }

.background-grid {
    opacity: 0.1;
}

.floating-shape {
    opacity: 0.2;
}
.calendar-shape {
            background-image: url("data:image/svg+xml,%3Csvg width='200' height='200' viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='40' y='40' width='120' height='120' fill='%23ffffff' opacity='0.8'/%3E%3Cpath d='M50 60 H150 M50 90 H150 M50 120 H150 M80 60 V140 M110 60 V140' stroke='%236A4C9C' stroke-width='2'/%3E%3C/svg%3E");
        }

        .clock-shape {
            background-image: url("data:image/svg+xml,%3Csvg width='150' height='150' viewBox='0 0 150 150' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='75' cy='75' r='60' fill='%23ffffff' opacity='0.8'/%3E%3Cpath d='M75 25 V75 H105' stroke='%236A4C9C' stroke-width='3'/%3E%3C/svg%3E");
        }

        @media (max-width: 768px) {
                        .floating-shape {
                display: none;
            }
        }
</style>
</head>
<body>
    <!-- Floating shapes -->
    <div class="floating-shape calendar-shape"></div>
    <div class="floating-shape clock-shape"></div>
    <div class="container">
        <div class="header-buttons">
            <button class="back-btn" onclick="window.location.href='/admin-dashboard';">Back to Dashboard</button>
            <button class="logout-btn" onclick="window.location.href='/logout';" >Logout</button>
        </div><br/>
        <h1>Admin Overtime View</h1>

        <div>
            <label for="search_query" class="form-label">Search by Faculty Name or ID</label>
            <input type="text" id="search_query" class="form-control" placeholder="Enter faculty name or ID">
        </div>

        <div>
            <label for="date_range" class="form-label">Select Date Range</label>
            <select id="date_range" class="form-select">
                <option value="week" >This Week</option>
                <option value="month">This Month</option>
                <option value="custom" selected>Custom Range</option>
            </select>
        </div>

        <div id="custom_range" style="display: flex; align-items: center; gap: 20px; margin-bottom: 20px;">
    <label for="start_date" class="form-label" style="margin-right: 10px;">Start Date</label>
    <input type="date" id="start_date" class="form-control" style="flex: 1;">
    <label for="end_date" class="form-label" style="margin-right: 10px;">End Date</label>
    <input type="date" id="end_date" class="form-control" style="flex: 1;">
</div>


        <table class="table">
            <thead>
                <tr>
                    <th>Faculty Name</th>
                    <th>Total Hours</th>
                </tr>
            </thead>
            <tbody id="faculty_table">
                <tr>
                    <td colspan="2">No records found</td>
                </tr>
            </tbody>
        </table>

    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#search_query').on('keyup', function () {
                fetchOvertime();
            });

            $('#date_range, #start_date, #end_date').on('change', function () {
                fetchOvertime();
            });

            $('#date_range').on('change', function () {
                const value = $(this).val();
                if (value === 'custom') {
                    $('#custom_range').show();
                } else {
                    $('#custom_range').hide();
                    $('#start_date').val('');
                    $('#end_date').val('');
                }
            });

            fetchOvertime();
        });

        function fetchOvertime() {
            const search_query = $('#search_query').val().trim();
            const range = $('#date_range').val();
            const start_date = $('#start_date').val();
            const end_date = $('#end_date').val();

            const tbody = $('#faculty_table');
            tbody.html('<tr><td colspan="2">Loading...</td></tr>');

            $.get('/get_overtime_all', { search_query, range, start_date, end_date }, function (data) {
                tbody.empty();

                if (data.length === 0) {
                    tbody.append('<tr><td colspan="2">No records found</td></tr>');
                } else {
                    data.forEach(item => {
                        tbody.append(`
                            <tr>
                                <td><a href="#" onclick="viewDetails('${item.faculty_id}', '${range}', '${start_date}', '${end_date}')">${item.faculty_name}</a></td>
                                <td>${item.total_hours.toFixed(2)} hours</td>
                            </tr>
                        `);
                    });
                }
            });
        }

        function viewDetails(faculty_id, range, start_date, end_date) {
            $.get('/get_faculty_overtime_details', { faculty_id, start_date, end_date }, function (data) {
                let details = data.map(record => `
                    <p><strong>Date:</strong> ${record.date}</p>
                    <p><strong>Start:</strong> ${record.start_time}</p>
                    <p><strong>End:</strong> ${record.end_time}</p>
                    <p><strong>Hours:</strong> ${record.hours_worked}</p>
                    <p><strong>Description:</strong> ${record.description}</p>
                    <hr>
                `).join('');
                alert(details);
            });
        }
    </script>
</body>
</html>

admin-entry.html : <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #6A4C9C;
            --secondary-color: #D8B0F7;
            --accent-color: #F1E1FF;
            --text-light: #F9F5FF;
            --white: #ffffff;
            --shadow: rgba(106, 76, 156, 0.2);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            color: var(--white);
        }

        .container {
            width: 95%;
            max-width: 1200px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(12px);
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(31, 38, 135, 0.37);
        }

        /* Header Section */
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            border-bottom: 2px solid rgba(255, 255, 255, 0.2);
            padding-bottom: 15px;
        }

        .header h1 {
            font-size: 2.5rem;
            font-weight: 600;
            background: linear-gradient(to right, var(--text-light), var(--white));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .header-buttons {
            display: flex;
            gap: 15px;
        }

        .header-buttons button {
            padding: 10px 20px;
            font-size: 1rem;
            font-weight: 500;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .header-buttons .generate-btn {
            background: var(--primary-color);
            color: var(--white);
        }

        .header-buttons .generate-btn:hover {
            background: #553982;
            box-shadow: 0 4px 12px var(--shadow);
        }

        .header-buttons .logout-btn {
            background: #E57373;
            color: var(--white);
        }

        .header-buttons .logout-btn:hover {
            background: #D32F2F;
        }

        /* Timetables Section */
        .content {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }



        .timetables-section h2 {
            font-size: 2rem;
            font-weight: 600;
            color: var(--text-light);
            margin-bottom: 20px;
        }

            .background-grid {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: grid;
            grid-template-columns: repeat(20, 1fr);
            grid-template-rows: repeat(20, 1fr);
            opacity: 0.1;
            pointer-events: none;
        }



        /* Floating shapes */
        .floating-shape {
            position: absolute;
            opacity: 0.2;
            pointer-events: none;
            z-index: 0;
        }

        .calendar-shape {
            top: 10%;
            right: 10%;
            width: 200px;
            height: 200px;
            animation: float 6s ease-in-out infinite;
        }

        .clock-shape {
            bottom: 10%;
            left: 5%;
            width: 150px;
            height: 150px;
            animation: float 8s ease-in-out infinite;
        }

        @keyframes float {
            0% { transform: translateY(0) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(5deg); }
            100% { transform: translateY(0) rotate(0deg); }
        }
.calendar-shape {
            background-image: url("data:image/svg+xml,%3Csvg width='200' height='200' viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='40' y='40' width='120' height='120' fill='%23ffffff' opacity='0.8'/%3E%3Cpath d='M50 60 H150 M50 90 H150 M50 120 H150 M80 60 V140 M110 60 V140' stroke='%236A4C9C' stroke-width='2'/%3E%3C/svg%3E");
        }

        .clock-shape {
            background-image: url("data:image/svg+xml,%3Csvg width='150' height='150' viewBox='0 0 150 150' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='75' cy='75' r='60' fill='%23ffffff' opacity='0.8'/%3E%3Cpath d='M75 25 V75 H105' stroke='%236A4C9C' stroke-width='3'/%3E%3C/svg%3E");
        }
        .timetable {
            background: var(--white);
            color: var(--primary-color);
            padding: 15px 20px;
            border-radius: 12px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            box-shadow: 0 5px 15px rgba(31, 38, 135, 0.12);
        }


        .buttons {
            display: flex;
            gap: 10px;
        }

        .buttons button {
            padding: 8px 16px;
            border: none;
            border-radius: 8px;
            font-size: 0.9rem;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .buttons .view-btn {
            background: var(--primary-color);
            color: var(--white);
        }

        .buttons .view-btn:hover {
            background: #553982;
        }

        .buttons .delete-btn {
            background: #FFE5E5;
            color: #D32F2F;
        }

        .buttons .delete-btn:hover {
            background: #D32F2F;
            color: var(--white);
        }

        .buttons .download-btn {
            background: var(--secondary-color);
            color: var(--primary-color);
        }

                .generate-btn1 {
    padding: 12px 30px;
    background: #6A4C9C;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 20px; /* Adding some spacing for better layout */
}

.generate-btn1:hover {
    background: #553982;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(106, 76, 156, 0.3);
}

.generate-btn1:active {
    transform: translateY(0);
}

    </style>
</head>
<body>
<div class="background-grid">
        <!-- Grid cells will be added via JavaScript -->
    </div>

    <!-- Floating shapes -->
    <div class="floating-shape calendar-shape"></div>
    <div class="floating-shape clock-shape"></div>
    <div class="container">

        <div class="header">
            <h1>Admin Dashboard</h1>
        </div>

            <div class="header-buttons">
                <button class="generate-btn" onclick="location.href='{{ url_for('generate_timetable') }}'">Generate Timetable</button>
                <button class="generate-btn" onclick="location.href='{{ url_for('admin_view_ot') }}'">Check Teacher's OT</button>
                <button class="generate-btn" onclick="location.href='/OCR'">Upload Timetable</button><br/><br/>
                <button class="generate-btn" onclick="location.href='{{ url_for('view_all_ot') }}'">View all OT </button>
                <button class="logout-btn" onclick="location.href='{{ url_for('logout') }}'">Logout</button>
            </div><br/>

        <!-- Content Section -->
        <div class="content">
            <div class="timetables-section">
                <h2>Available Timetables</h2>
                <div id="timetables">
                    <!-- Timetable data will be populated here dynamically -->
                </div>
            </div>
        </div>
    </div>

    <script>
        async function fetchTimetables() {
            const response = await fetch('/fetch_timetables');
            const data = await response.json();
            const timetablesDiv = document.getElementById('timetables');

            if (data.timetables.length === 0) {
    timetablesDiv.innerHTML = `
        <p class="no-timetables">No timetables available.</p>
        <button class="generate-btn1" onclick="location.href='{{ url_for('generate_timetable') }}'">Generate Timetable</button>
    `;
    return;
}


            timetablesDiv.innerHTML = '';
            data.timetables.forEach(tt => {
                const ttDiv = document.createElement('div');
                ttDiv.classList.add('timetable');
                ttDiv.innerHTML = `
                    <h3>Semester ${tt.semester} Timetable</h3>
                    <div class="buttons">
                        <button class="view-btn" onclick="viewTimetable('${tt._id}')">View Timetable</button>
                        <button class="delete-btn" onclick="deleteTimetable('${tt._id}')">Delete</button>
                    </div>
                `;
                timetablesDiv.appendChild(ttDiv);
            });
        }

        function viewTimetable(id) {
            window.location.href = `/view_timetable/${id}`;
        }

        async function deleteTimetable(id) {
            if (confirm('Are you sure you want to delete this timetable?')) {
                const response = await fetch(`/delete_timetable/${id}`, { method: 'DELETE' });
                if (response.ok) {
                    alert('Timetable deleted successfully.');
                    location.reload();
                } else {
                    alert('Failed to delete timetable.');
                }
            }
        }

        fetchTimetables();
    </script>
</body>
</html>


now make changes such that when i click on the view all ot it should show all faculty ot details , ot is stored like this in this format (example)monngodb
{
  "_id": {
    "$oid": "67b45dea4634800ad831a614"
  },
  "email": "teacher2@rvce.edu.in",
  "date": "2025-02-19",
  "start_time": "16:30",
  "end_time": "17:30",
  "hours_worked": 1,
  "description": "Confernece work "
}
